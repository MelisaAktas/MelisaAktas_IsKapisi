// <auto-generated />
using System;
using IsKapisi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IsKapisi.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240408000322_InitialDb3")]
    partial class InitialDb3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("IsKapisi.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(5683),
                            Description = "TV kategorisi",
                            IsActive = true,
                            IsDelete = false,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(5700),
                            Name = "Televizyon",
                            Url = "televizyon"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(5706),
                            Description = "Bilgisayar kategorisi",
                            IsActive = true,
                            IsDelete = false,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(5707),
                            Name = "Bilgisayar",
                            Url = "bilgisayar"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(5708),
                            Description = "Elektronik Eşya kategorisi",
                            IsActive = true,
                            IsDelete = false,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(5708),
                            Name = "Elektronik Eşya",
                            Url = "elektronik-esya"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(5709),
                            Description = "Beyaz Eşya kategorisi",
                            IsActive = true,
                            IsDelete = false,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(5710),
                            Name = "Beyaz Eşya",
                            Url = "beyaz-esya"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(5711),
                            Description = "Telefon kategorisi",
                            IsActive = true,
                            IsDelete = false,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(5711),
                            Name = "Telefon",
                            Url = "telefon"
                        });
                });

            modelBuilder.Entity("IsKapisi.Entity.CategoryJob", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JobId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoryId", "JobId");

                    b.HasIndex("JobId");

                    b.ToTable("CategoryJob", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 3,
                            JobId = 1
                        },
                        new
                        {
                            CategoryId = 5,
                            JobId = 1
                        },
                        new
                        {
                            CategoryId = 3,
                            JobId = 2
                        },
                        new
                        {
                            CategoryId = 5,
                            JobId = 2
                        },
                        new
                        {
                            CategoryId = 3,
                            JobId = 3
                        },
                        new
                        {
                            CategoryId = 5,
                            JobId = 3
                        },
                        new
                        {
                            CategoryId = 3,
                            JobId = 4
                        },
                        new
                        {
                            CategoryId = 5,
                            JobId = 4
                        },
                        new
                        {
                            CategoryId = 2,
                            JobId = 5
                        },
                        new
                        {
                            CategoryId = 3,
                            JobId = 5
                        },
                        new
                        {
                            CategoryId = 2,
                            JobId = 6
                        },
                        new
                        {
                            CategoryId = 3,
                            JobId = 6
                        },
                        new
                        {
                            CategoryId = 3,
                            JobId = 7
                        },
                        new
                        {
                            CategoryId = 4,
                            JobId = 7
                        },
                        new
                        {
                            CategoryId = 3,
                            JobId = 8
                        },
                        new
                        {
                            CategoryId = 4,
                            JobId = 8
                        },
                        new
                        {
                            CategoryId = 3,
                            JobId = 9
                        },
                        new
                        {
                            CategoryId = 3,
                            JobId = 10
                        },
                        new
                        {
                            CategoryId = 4,
                            JobId = 10
                        },
                        new
                        {
                            CategoryId = 1,
                            JobId = 11
                        },
                        new
                        {
                            CategoryId = 3,
                            JobId = 11
                        },
                        new
                        {
                            CategoryId = 4,
                            JobId = 11
                        });
                });

            modelBuilder.Entity("IsKapisi.Entity.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHome")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Jobs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6607),
                            ImageUrl = "1.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6610),
                            Name = "IPhone 14",
                            Properties = "Harika bir telefon",
                            Url = "iphone-14"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6618),
                            ImageUrl = "2.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6618),
                            Name = "IPhone 14 Pro",
                            Properties = "Bu da harika bir telefon",
                            Url = "iphone-14-pro"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6620),
                            ImageUrl = "3.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6620),
                            Name = "Samsung S23",
                            Properties = "İdare eder",
                            Url = "samsung-s23"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6622),
                            ImageUrl = "4.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6622),
                            Name = "Xaomi Note 4",
                            Properties = "Harika bir telefon",
                            Url = "xaomi-note-4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6624),
                            ImageUrl = "5.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6624),
                            Name = "MacBook Air M2",
                            Properties = "M2nin gücü",
                            Url = "macbook-air-m2"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6626),
                            ImageUrl = "6.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6626),
                            Name = "MacBook Pro M3",
                            Properties = "16 Gb ram",
                            Url = "macbook-pro-m3"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6627),
                            ImageUrl = "7.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6628),
                            Name = "Vestel Çamaşır Makinesi X65",
                            Properties = "Akıllı makine",
                            Url = "vestel-camasir-makinesi-x65"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6629),
                            ImageUrl = "8.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6629),
                            Name = "Arçelik Çamaşır Makinesi A-4",
                            Properties = "Süper hızlı makine",
                            Url = "arcelik-camasir-makinesi-a-4"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6631),
                            ImageUrl = "9.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6631),
                            Name = "Hoop Dijital Radyo X96",
                            Properties = "Klasik radyo keyfi",
                            Url = "hoop-dijital-radyo-x96"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6632),
                            ImageUrl = "10.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6633),
                            Name = "Xaomi Dijital Baskül",
                            Properties = "Kilonuzu kontrol edin",
                            Url = "xaomi-dijital-baskul"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6634),
                            ImageUrl = "11.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 4, 8, 3, 3, 22, 852, DateTimeKind.Local).AddTicks(6634),
                            Name = "Blaupunkt AC69 Led TV",
                            Properties = "Android tv",
                            Url = "blaupunkt-ac69-led-tv"
                        });
                });

            modelBuilder.Entity("IsKapisi.Entity.CategoryJob", b =>
                {
                    b.HasOne("IsKapisi.Entity.Category", "Category")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IsKapisi.Entity.Job", "Job")
                        .WithMany("CategoryJobs")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("IsKapisi.Entity.Category", b =>
                {
                    b.Navigation("CategoryProducts");
                });

            modelBuilder.Entity("IsKapisi.Entity.Job", b =>
                {
                    b.Navigation("CategoryJobs");
                });
#pragma warning restore 612, 618
        }
    }
}
